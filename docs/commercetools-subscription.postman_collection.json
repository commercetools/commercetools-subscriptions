{
	"info": {
		"_postman_id": "3092b88f-f2e4-4645-8745-60e5128a85a0",
		"name": "commercetools-subscription",
		"description": "# commercetools API Postman collection\n\nThis Postman collection contains examples of requests and responses for most endpoints and commands of the\ncommercetools platform API. For every command the smallest possible payload is given. Please find optional\nfields in the related official documentation. Additionally the collection provides example requests and\nresponses for specific tasks and more complex data models.\n\n## Disclaimer\n\nThis is not the official commercetools platform API documentation. Please see [here](http://docs.commercetools.com/)\nfor a complete and approved documentation of the commercetools platform API.\n\n## How to use\n\n**:warning: Be aware that postman automatically synchronizes environment variables (including your API client credentials) to your workspace if logged in.\nUse this collection only for development purposes and non-production projects.**\n\nTo use this collection in Postman please perform the following steps:\n\n1. Download and install the Postman Client\n2. Import the [collection.json](https://github.com/commercetools/commercetools-postman-api-examples/raw/master/collection.json) and [template.json](https://github.com/commercetools/commercetools-postman-api-examples/raw/master/template.json) in your postman application\n3. In the Merchant Center, create a new API Client and fill in the client credentials in your environment\n4. Obtain an access token by sending the \"Authorization/Obtain access token\" request at the bottom of the request list. Now you can use all other endpoints\n\nFeel free to clone and modify this collection to your needs.\n\nTo automate frequent tasks the collection automatically manages commonly required values and parameters such\nas resource ids, keys and versions in Postman environment variables for you.\n\nPlease see http://docs.commercetools.com/ for further information about the commercetools Plattform.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Obtain access token",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.access_token){",
							"    pm.environment.set(\"ctp_access_token\", data.access_token);",
							"}",
							"if (data.scope) {",
							"    parts = data.scope.split(\" \");",
							"    parts = parts.filter(scope => scope.includes(\":\")).map(scope => scope.split(\":\"))",
							"    if (parts.length > 0) {",
							"        scopeParts = parts[0];",
							"        pm.environment.set(\"projectKey\", scopeParts[1]);",
							"        parts = parts.filter(scope => scope.length >= 3)",
							"        if (parts.length > 0) {",
							"            scopeParts = parts[0];",
							"            pm.environment.set(\"storeKey\", scopeParts[2]);",
							"        }",
							"    }",
							"}"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "{{client_id}}",
							"type": "string"
						},
						{
							"key": "password",
							"value": "{{client_secret}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{auth_url}}/oauth/token?grant_type=client_credentials",
					"host": [
						"{{auth_url}}"
					],
					"path": [
						"oauth",
						"token"
					],
					"query": [
						{
							"key": "grant_type",
							"value": "client_credentials"
						}
					]
				},
				"description": "Use this request to obtain an access token for your commercetools platform project via Client Credentials Flow. As a prerequisite you must have filled out environment variables in Postman for projectKey, client_id and client_secret to use this."
			},
			"response": []
		},
		{
			"name": "Order Search: Fetch template order history of customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"order-id\", data.results[0].id); ",
							"    pm.environment.set(\"order-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"order-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"query\": {\n        \"and\": [\n            {\n                \"exists\": {\n                    \"field\": \"custom.schedule\",\n                    \"customType\": \"StringType\"\n                }\n            },\n            {\n                \"exact\": {\n                    \"field\": \"customerEmail\",\n                    \"value\": \"test@test.com\"\n                }\n            }\n        ]\n    },\n    \"sort\": [\n        {\n            \"field\": \"createdAt\",\n            \"order\": \"desc\"\n        }\n    ],\n    \"limit\": 20,\n    \"offset\": 0\n}"
				},
				"url": {
					"raw": "{{host}}/{{projectKey}}/orders/search",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"orders",
						"search"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "",
							"disabled": true
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Order Search: Fetch subscription order history of customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"order-id\", data.results[0].id); ",
							"    pm.environment.set(\"order-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"order-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"query\": {\n        \"and\": [\n            {\n                \"exists\": {\n                    \"field\": \"custom.deliveryDate\",\n                    \"customType\": \"StringType\"\n                }\n            },\n            {\n                \"exact\": {\n                    \"field\": \"customerEmail\",\n                    \"value\": \"test@test.com\"\n                }\n            }\n        ]\n    },\n    \"sort\": [\n        {\n            \"field\": \"createdAt\",\n            \"order\": \"desc\"\n        }\n    ],\n    \"limit\": 20,\n    \"offset\": 0\n}"
				},
				"url": {
					"raw": "{{host}}/{{projectKey}}/orders/search",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"orders",
						"search"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "",
							"disabled": true
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Paginate Orders fetched from order-search API.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"order-id\", data.results[0].id); ",
							"    pm.environment.set(\"order-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"order-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/orders?sort=createdAt desc&limit=20&withTotal=false&where=id in (\"f85208f1-4544-44b6-8e2e-b09b20735893\",\"be8b8631-0b01-4e32-a33e-98396638408d\",\"48fb3732-1e7f-4132-8df2-233b2cbdafa3\",\"fa019c46-aaad-414b-9419-ababbcf26148\",\"4ad08f35-494f-4d06-a751-02bc18d5a418\",\"d72dbbb9-8ed5-469a-acad-601815490fa9\",\"07901f7d-36ed-464f-9de4-ec96953345e4\",\"4114f7da-438f-4275-a99d-6b0ab9a69ca1\",\"61ad2ca9-71b8-42aa-86ea-9e316ba3de55\",\"8aea5e49-a920-4d87-aa40-9767409b2c3d\",\"371b451a-4dec-4675-9050-53d69d47d799\",\"b4d139af-f315-4770-a548-27237367ce8d\",\"83a61dee-89b0-403a-9e71-95e292fa6135\",\"a9a5ce5c-de7a-4969-b76c-9e035d707078\",\"d6fb8072-2f75-44be-b012-2b0e8afbc6ad\",\"2f3c08be-8350-4115-80ab-99baf85ec059\",\"68f14e5f-59ea-4674-960a-b7abc87ed683\",\"941ba64a-87a8-4925-80ca-336bcf7a8e86\",\"cde4935d-f595-4377-9c88-e792dda591d8\",\"f22a534f-967f-4922-9bce-ccd2d24ce23f\")&",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"orders"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "createdAt desc"
						},
						{
							"key": "limit",
							"value": "20"
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "false"
						},
						{
							"key": "where",
							"value": "id in (\"f85208f1-4544-44b6-8e2e-b09b20735893\",\"be8b8631-0b01-4e32-a33e-98396638408d\",\"48fb3732-1e7f-4132-8df2-233b2cbdafa3\",\"fa019c46-aaad-414b-9419-ababbcf26148\",\"4ad08f35-494f-4d06-a751-02bc18d5a418\",\"d72dbbb9-8ed5-469a-acad-601815490fa9\",\"07901f7d-36ed-464f-9de4-ec96953345e4\",\"4114f7da-438f-4275-a99d-6b0ab9a69ca1\",\"61ad2ca9-71b8-42aa-86ea-9e316ba3de55\",\"8aea5e49-a920-4d87-aa40-9767409b2c3d\",\"371b451a-4dec-4675-9050-53d69d47d799\",\"b4d139af-f315-4770-a548-27237367ce8d\",\"83a61dee-89b0-403a-9e71-95e292fa6135\",\"a9a5ce5c-de7a-4969-b76c-9e035d707078\",\"d6fb8072-2f75-44be-b012-2b0e8afbc6ad\",\"2f3c08be-8350-4115-80ab-99baf85ec059\",\"68f14e5f-59ea-4674-960a-b7abc87ed683\",\"941ba64a-87a8-4925-80ca-336bcf7a8e86\",\"cde4935d-f595-4377-9c88-e792dda591d8\",\"f22a534f-967f-4922-9bce-ccd2d24ce23f\")"
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Query orders"
			},
			"response": []
		},
		{
			"name": "Fetch subcription orders of the template order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"order-id\", data.results[0].id); ",
							"    pm.environment.set(\"order-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"order-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/orders?withTotal=false&where=custom(fields(subscriptionTemplateOrderRef(id%3D%224ad08f35-494f-4d06-a751-02bc18d5a418%22)))&",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"orders"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "false"
						},
						{
							"key": "where",
							"value": "custom(fields(subscriptionTemplateOrderRef(id%3D%224ad08f35-494f-4d06-a751-02bc18d5a418%22)))"
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Query orders"
			},
			"response": []
		},
		{
			"name": "Grapqhl: Paginate Orders fetched from order-search API.",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.version){",
							"    pm.environment.set(\"graphql-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"graphql-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"graphql-key\", data.key);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"query\": \"query FetchOrdersListQuery($limit: Int, $offset: Int, $sort: [String!], $where: String) {\\n  orders(limit: $limit, offset: $offset, sort: $sort, where: $where) {\\n    total\\n    count\\n    results {\\n      ...OrderListFragment\\n    }\\n  }\\n}\\n\\nfragment OrderListFragment on Order {\\n  id\\n  orderNumber\\n  customerEmail\\n  totalPrice {\\n    centAmount\\n    currencyCode\\n    fractionDigits\\n  }\\n  lineItems {\\n    id\\n    productKey\\n  }\\n  customLineItems {\\n    id\\n  }\\n  customerGroup {\\n    id\\n    name\\n    key\\n  }\\n  shippingAddress {\\n    id\\n    firstName\\n    lastName\\n    email\\n  }\\n  billingAddress {\\n    id\\n    firstName\\n    lastName\\n    email\\n  }\\n  orderState\\n  paymentState\\n  shipmentState\\n  createdAt\\n  lastModifiedAt\\n  state {\\n    key\\n    nameAllLocales {\\n      locale\\n      value\\n    }\\n  }\\n  custom {\\n    customFieldsRaw {\\n      name\\n      value\\n    }\\n  }\\n}\\n\",\n    \"variables\": {\n      \"where\": \"id in (\\\"f85208f1-4544-44b6-8e2e-b09b20735893\\\",\\\"be8b8631-0b01-4e32-a33e-98396638408d\\\",\\\"48fb3732-1e7f-4132-8df2-233b2cbdafa3\\\",\\\"fa019c46-aaad-414b-9419-ababbcf26148\\\",\\\"4ad08f35-494f-4d06-a751-02bc18d5a418\\\",\\\"d72dbbb9-8ed5-469a-acad-601815490fa9\\\",\\\"07901f7d-36ed-464f-9de4-ec96953345e4\\\",\\\"4114f7da-438f-4275-a99d-6b0ab9a69ca1\\\",\\\"61ad2ca9-71b8-42aa-86ea-9e316ba3de55\\\",\\\"8aea5e49-a920-4d87-aa40-9767409b2c3d\\\",\\\"371b451a-4dec-4675-9050-53d69d47d799\\\",\\\"b4d139af-f315-4770-a548-27237367ce8d\\\",\\\"83a61dee-89b0-403a-9e71-95e292fa6135\\\",\\\"a9a5ce5c-de7a-4969-b76c-9e035d707078\\\",\\\"d6fb8072-2f75-44be-b012-2b0e8afbc6ad\\\",\\\"2f3c08be-8350-4115-80ab-99baf85ec059\\\",\\\"68f14e5f-59ea-4674-960a-b7abc87ed683\\\",\\\"941ba64a-87a8-4925-80ca-336bcf7a8e86\\\",\\\"cde4935d-f595-4377-9c88-e792dda591d8\\\",\\\"f22a534f-967f-4922-9bce-ccd2d24ce23f\\\")\"\n    },\n    \"operationName\": \"FetchOrdersListQuery\"\n  }"
				},
				"url": {
					"raw": "{{host}}/{{projectKey}}/graphql",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"graphql"
					]
				},
				"description": "If you don't need all fields, this might perform better."
			},
			"response": []
		},
		{
			"name": "Query States",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"state-id\", data.results[0].id); ",
							"    pm.environment.set(\"state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"state-key\", data.results[0].key); ",
							"}",
							""
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/states",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"states"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "",
							"disabled": true
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Query states"
			},
			"response": []
		},
		{
			"name": "Query Error State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"state-id\", data.results[0].id); ",
							"    pm.environment.set(\"state-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"state-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/states?where=key%3D%22commercetools-subscriptions-error%22&",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"states"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "key%3D%22commercetools-subscriptions-error%22"
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Query states"
			},
			"response": []
		},
		{
			"name": "Query All OrderStateTransition messages",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"message-id\", data.results[0].id); ",
							"    pm.environment.set(\"message-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"message-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/messages?where=type%3D%22OrderStateTransition%22&",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"messages"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "type%3D%22OrderStateTransition%22"
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Query messages"
			},
			"response": []
		},
		{
			"name": "Update Order's TransitionState to Active - with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code \" + responseCode.code] = responseCode.code === 200 || responseCode.code === 201;",
							"var data = JSON.parse(responseBody);",
							"if(data.version){",
							"    pm.environment.set(\"order-version\", data.version);",
							"}",
							"if(data.id){",
							"    pm.environment.set(\"order-id\", data.id); ",
							"}",
							"if(data.key){",
							"    pm.environment.set(\"order-key\", data.key);",
							"}",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"version\": 3,\n    \"actions\": [\n        {\n            \"action\" : \"transitionState\",\n            \"state\" : {\n              \"typeId\" : \"state\",\n              \"id\" : \"09015358-70e9-4025-b4b6-3febcaaf06de\"\n            }\n          }\n    ]\n}"
				},
				"url": {
					"raw": "{{host}}/{{projectKey}}/orders/f85208f1-4544-44b6-8e2e-b09b20735893?",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"orders",
						"f85208f1-4544-44b6-8e2e-b09b20735893"
					],
					"query": [
						{
							"key": "",
							"value": null
						},
						{
							"key": "expand",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "OrderTransitionStateAction"
			},
			"response": []
		},
		{
			"name": "Query Messages for order with id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"var data = JSON.parse(responseBody);",
							"if(data.results && data.results[0] && data.results[0].id && data.results[0].version){",
							"    pm.environment.set(\"message-id\", data.results[0].id); ",
							"    pm.environment.set(\"message-version\", data.results[0].version);",
							"}",
							"if(data.results && data.results[0] && data.results[0].key){",
							"    pm.environment.set(\"message-key\", data.results[0].key); ",
							"}",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "accessToken",
							"value": "{{ctp_access_token}}",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "Bearer",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{host}}/{{projectKey}}/messages?where=type%3D%22OrderStateTransition%22%20and%20resource(id%3D%221cfb3b98-3f82-4fea-aaa0-004614cc008d%22)&",
					"host": [
						"{{host}}"
					],
					"path": [
						"{{projectKey}}",
						"messages"
					],
					"query": [
						{
							"key": "expand",
							"value": "",
							"disabled": true
						},
						{
							"key": "sort",
							"value": "",
							"disabled": true
						},
						{
							"key": "limit",
							"value": "",
							"disabled": true
						},
						{
							"key": "offset",
							"value": "",
							"disabled": true
						},
						{
							"key": "withTotal",
							"value": "",
							"disabled": true
						},
						{
							"key": "where",
							"value": "type%3D%22OrderStateTransition%22%20and%20resource(id%3D%221cfb3b98-3f82-4fea-aaa0-004614cc008d%22)"
						},
						{
							"key": "/^var[.][a-zA-Z0-9]+$/",
							"value": "",
							"disabled": true
						},
						{
							"key": "",
							"value": null
						}
					]
				},
				"description": "Query messages"
			},
			"response": []
		}
	],
	"auth": {
		"type": "oauth2",
		"oauth2": [
			{
				"key": "accessToken",
				"value": "{{ctp_access_token}}",
				"type": "string"
			},
			{
				"key": "addTokenTo",
				"value": "header",
				"type": "string"
			},
			{
				"key": "tokenType",
				"value": "Bearer",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}